{"ast":null,"code":"//Promesas\nimport heores from './data/heroes';\nimport { getHeroeById, getHeroebyOwner } from './bases/08 Import Export '; // Resolve, se ejecuta cuando la promesa se cumple\n//reject se ejecuta cuando la promesa falla.\n\nconst promesa = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    const heroe = getHeroeById(1);\n    resolve(heroe); //en caso de error\n\n    reject('No se pudo encontrar el heroe'); //el resolve otorga el argumento dentro de este al then\n  }, 2000); //settime out, funcion propia de javascript que permite ejecutar cosas en un tiempo determinado\n});\npromesa.then(argumento => console.log('Then de la promesa', argumento)).catch(err => console.warn(err)); //el catch agarra el error y lo coloca \n//then promesa, se hizo correctamente\n//catch dio un error, para manejar la exepcion\n//finally, lo ultimo que se ejcuta\n////////////////////////////\n\nconst getHeroeByIdAsync = id => {\n  const promesa = new Promise((resolve, reject) => {\n    setTimeout();\n  });\n};","map":{"version":3,"names":["heores","getHeroeById","getHeroebyOwner","promesa","Promise","resolve","reject","setTimeout","heroe","then","argumento","console","log","catch","err","warn","getHeroeByIdAsync","id"],"sources":["/Users/macbookpro/Desktop/DiseÃ±o Software/Proyecto Semestral /01 intro-javascript/src/index.js"],"sourcesContent":["//Promesas\nimport heores from './data/heroes'\nimport { getHeroeById,getHeroebyOwner } from './bases/08 Import Export ';\n// Resolve, se ejecuta cuando la promesa se cumple\n//reject se ejecuta cuando la promesa falla.\nconst promesa = new Promise( (resolve, reject) => {\n    setTimeout( () =>{\n        const heroe = getHeroeById(1);\n        resolve (heroe);\n        //en caso de error\n        reject('No se pudo encontrar el heroe');\n        //el resolve otorga el argumento dentro de este al then\n        \n    }, 2000 )\n    //settime out, funcion propia de javascript que permite ejecutar cosas en un tiempo determinado\n});\n\n\n\npromesa.then( ( argumento ) => \n    console.log('Then de la promesa', argumento)\n).catch(err => console.warn(err));\n//el catch agarra el error y lo coloca \n//then promesa, se hizo correctamente\n//catch dio un error, para manejar la exepcion\n//finally, lo ultimo que se ejcuta\n\n\n\n\n\n////////////////////////////\n\n\n\nconst getHeroeByIdAsync = ( id ) => {\n\n    const promesa = new Promise ((resolve, reject) => {\n\n        setTimeout( )\n    });\n}\n"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,YAAT,EAAsBC,eAAtB,QAA6C,2BAA7C,C,CACA;AACA;;AACA,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;EAC9CC,UAAU,CAAE,MAAK;IACb,MAAMC,KAAK,GAAGP,YAAY,CAAC,CAAD,CAA1B;IACAI,OAAO,CAAEG,KAAF,CAAP,CAFa,CAGb;;IACAF,MAAM,CAAC,+BAAD,CAAN,CAJa,CAKb;EAEH,CAPS,EAOP,IAPO,CAAV,CAD8C,CAS9C;AACH,CAVe,CAAhB;AAcAH,OAAO,CAACM,IAAR,CAAgBC,SAAF,IACVC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,SAAlC,CADJ,EAEEG,KAFF,CAEQC,GAAG,IAAIH,OAAO,CAACI,IAAR,CAAaD,GAAb,CAFf,E,CAGA;AACA;AACA;AACA;AAMA;;AAIA,MAAME,iBAAiB,GAAKC,EAAF,IAAU;EAEhC,MAAMd,OAAO,GAAG,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAE9CC,UAAU;EACb,CAHe,CAAhB;AAIH,CAND"},"metadata":{},"sourceType":"module"}